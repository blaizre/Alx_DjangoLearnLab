"""
Django settings for LibraryProject project.

Generated by 'django-admin startproject' using Django 4.2.23.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# Keep DEBUG True locally; set DJANGO_DEBUG=False in production environment
DEBUG = os.environ.get("DJANGO_DEBUG", "True") == "True"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# In production set DJANGO_ALLOWED_HOSTS to a comma-separated list, e.g. "example.com,www.example.com"
ALLOWED_HOSTS = os.environ.get("DJANGO_ALLOWED_HOSTS", "127.0.0.1,localhost").split(",")
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "bookshelf",
    "relationship_app",
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'LibraryProject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'LibraryProject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
AUTH_USER_MODEL = "bookshelf.CustomUser"


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# ---- SECURITY SETTINGS (development-friendly defaults) ----
# Use environment variables in production to override these safely.

# Keep using SECRET_KEY already present; you can override in prod via DJANGO_SECRET_KEY env var
SECRET_KEY = os.environ.get("DJANGO_SECRET_KEY", "SECRET_KEY-replace-this-in-production")

# DEBUG remains as currently set; to flip to production use:
# export DJANGO_DEBUG=False
DEBUG = os.environ.get("DJANGO_DEBUG", str(DEBUG)) == "True"

# Example: set allowed hosts via env var in production
ALLOWED_HOSTS = os.environ.get("DJANGO_ALLOWED_HOSTS", ",".join(ALLOWED_HOSTS or ["127.0.0.1", "localhost"])).split(",")

# If testing locally over HTTP, set DJANGO_SESSION_COOKIE_SECURE=False and DJANGO_CSRF_COOKIE_SECURE=False as env vars.

# Cookie security â€” assignment requires cookies be sent only over HTTPS in production
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True

# Additional cookie hardening
SESSION_COOKIE_HTTPONLY = True   # prevents JS access to session cookie

# Browser-side protections
SECURE_BROWSER_XSS_FILTER = True       # sets X-XSS-Protection header
SECURE_CONTENT_TYPE_NOSNIFF = True    # sets X-Content-Type-Options: nosniff
X_FRAME_OPTIONS = "DENY"              # prevents clickjacking
SECURE_REFERRER_POLICY = "strict-origin-when-cross-origin"

# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

#Redirect all HTTP req to HTTPS
SECURE_SSL_REDIRECT = True

#HTTP Strict Transport Security(HSTS)
SECURE_HSTS_SECONDS = 31536000
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_PRELOAD = True

